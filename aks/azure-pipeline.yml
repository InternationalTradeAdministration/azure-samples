trigger:
  - master

pool:
  vmImage: 'ubuntu-16.04'

steps:
  - task: Gradle@2
    inputs:
      gradleWrapperFile: 'aks/gradlew'
      workingDirectory: 'aks'
      tasks: 'test build'
      publishJUnitResults: true
      testResultsFiles: '**/TEST-*.xml'
      javaHomeOption: 'JDKVersion'
      sonarQubeRunAnalysis: false
  - task: CopyFiles@2
    inputs:
      Contents: 'aks/kube-config.yml'
      TargetFolder: '$(build.artifactstagingdirectory)'
    displayName: 'Copy Kube Config'
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'manifest'
      publishLocation: 'Container'
    displayName: 'Publish Kube Config'
  - task: DockerCompose@0
    inputs:
      containerregistrytype: 'Azure Container Registry'
      azureSubscription: 'ITADEV2-MSDataServicesAzure'
      azureContainerRegistry: '{"loginServer":"itadevacr.azurecr.io", "id" : "/subscriptions/675d7977-79af-4b94-b0bd-26d4095a4ffb/resourceGroups/ITA-MSDataServices-Dev-East1/providers/Microsoft.ContainerRegistry/registries/itadevacr"}'
      dockerComposeFile: '**/aks/docker-compose.yml'
      action: 'Build services'
      additionalImageTags: '$(Build.BuildId)'
    displayName: 'Build Docker image'
  - task: DockerCompose@0
    inputs:
      containerregistrytype: 'Azure Container Registry'
      azureSubscription: 'ITADEV2-MSDataServicesAzure'
      azureContainerRegistry: '{"loginServer":"itadevacr.azurecr.io", "id" : "/subscriptions/675d7977-79af-4b94-b0bd-26d4095a4ffb/resourceGroups/ITA-MSDataServices-Dev-East1/providers/Microsoft.ContainerRegistry/registries/itadevacr"}'
      dockerComposeFile: '**/aks/docker-compose.yml'
      action: 'Push services'
      additionalImageTags: '$(Build.BuildId)'
    displayName: 'Push Docker image'
